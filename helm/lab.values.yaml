certmanager-issuer:
  email: me@example.com

upgradeCheck:
  enabled: false

global:
  edition: ce
  hosts:
    domain: local.gitlab.com      # Use a local domain name; ensure this resolves to your clusterâ€™s IP
    https: false                  # Disable HTTPS for this demo setup
    ssh: gitlab.local.gitlab.com
#    gitlab:
#      name: gitlab-webservice-default  # This tells GitLab to use the service name
#      https: false
#      servicePort: 8080
  email:
    from: 'no-reply@yukaringermany.com'
    displayName: 'Your Company Name'
    replyTo: 'support@yukaringermany.com'
  smtp:
    enabled: true
    address: 'email-smtp.eu-central-1.amazonaws.com'  # Adjust if using another region
    port: 465                                         # Port for implicit TLS
    user_name: 'AKIAW3MEC33U5S4W2AF5'                 # SMTP user name provided by SES
    password:
      secret: ses-smtp-secret                       # Reference to a Kubernetes secret
      key: password
    domain: 'yukaringermany.com'
    authentication: 'plain'
    tls: true                                       # Enables implicit TLS

gitlab:
  webservice:
    # Minimal replica count for low-resource setup
    maxReplicas: 1
    minReplicas: 1
    resources:
      limits:
        memory: 2G              # Limit memory usage to ~1GB
      requests:
        cpu: "250m"             # Request 0.25 CPU
        memory: 512Mi           # Request ~512Mi memory
    workerProcesses: 1          # Only one web worker process
    hpa:
      cpu:
        targetAverageValue: "500m"  # Lower HPA target for minimal load
    ingress:
      enabled: true
      proxyBodySize: 0          # Allow large uploads if needed
      hosts:
        - name: "local.gitlab.com"
          paths:
            - /
          tls: false            # Disable TLS on ingress
    nodeSelector: {}            # Allow scheduling anywhere (remove if you have dedicated nodes)
     
  sidekiq:
    maxReplicas: 1
    minReplicas: 1
    resources:
      limits:
        memory: 1024Mi           # Lower memory limit for background jobs
      requests:
        cpu: "200m"
        memory: 256Mi
    nodeSelector: {}

  toolbox:
    backups:
      objectStorage: {}

  migrations:
    psql:
      host: gitlab-postgresql    # Use the PostgreSQL service provided by the chart
      password:
        secret: gitlab-postgresql-password
        key: postgresql-password 
      port: 5432

nginx-ingress:
  controller:
    kind: Deployment           # Use Deployment instead of DaemonSet for lower resource usage
    nodeSelector: {}
    internal:
      enabled: true
    service:
      enabled: true
      type: ClusterIP
      externalTrafficPolicy: ""

registry:
  storage: {}

redis:
  install: true
  # Optional: Scale down Redis to reduce resource usage
  resources:
    limits:
      memory: 256Mi
    requests:
      memory: 128Mi

postgresql:
  install: true
  # Optional: Scale down PostgreSQL resource usage
  resources:
    limits:
      memory: 1G
    requests:
      memory: 512Mi

gitlab-runner:
  gitlabUrl: "http://gitlab.local.gitlab.com" 
#"http://gitlab-webservice-default.gitlab.svc.cluster.local:8080"
  runners:
    config: |
      [[runners]]
        name = "kind-runner"
        url = "http://gitlab.local.gitlab.com" 
        token = "glrt-t2_UASwDaBHz_x4kmwewQqq"
        executor = "kubernetes"
        [runners.kubernetes]
          host_aliases = [
            { ip = "10.96.25.70", hostnames = ["gitlab.local.gitlab.com"] }
          ]

prometheus:
  install: false
